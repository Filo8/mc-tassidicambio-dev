/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.2.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.example.restservice.api;

import com.example.restservice.model.ExchangeRatesRequest;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import jakarta.validation.Valid;
import jakarta.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import jakarta.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2024-05-09T14:26:53.298332800+02:00[Europe/Rome]")
@Validated
@Controller
@Tag(name = "Exchange Rates", description = "the Exchange Rates API")
public interface DownloadPdfApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /downloadPdf : Scarica in formato pdf i tassi di cambio di tutte le divise passate in input, rispetto alla valuta e alla data di riferimento inserite nella richiesta.
     * 
     *
     * @param exchangeRatesRequest  (optional)
     * @return A pdf file (status code 200)
     *         or Default error sample response (status code 200)
     */
    @Operation(
        operationId = "exportExchangeRatesAsPdf",
        summary = "Scarica in formato pdf i tassi di cambio di tutte le divise passate in input, rispetto alla valuta e alla data di riferimento inserite nella richiesta.",
        description = "",
        tags = { "Exchange Rates" },
        responses = {
            @ApiResponse(responseCode = "200", description = "A pdf file", content = {
                @Content(mediaType = "application/pdf", schema = @Schema(implementation = org.springframework.core.io.Resource.class))
            }),
            @ApiResponse(responseCode = "default", description = "Default error sample response")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/downloadPdf",
        produces = { "application/pdf" },
        consumes = { "application/json", "application/xml", "application/x-www-form-urlencoded" }
    )
    
    default ResponseEntity<org.springframework.core.io.Resource> exportExchangeRatesAsPdf(
        @Parameter(name = "ExchangeRatesRequest", description = "") @Valid @RequestBody(required = false) ExchangeRatesRequest exchangeRatesRequest
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
